# from aiogram import types
# from aiogram.types import CallbackQuery
# from keyboards.inline_keyboards import get_task_list_keyboard, get_main_menu_keyboard
# from data.tasks import tasks
# from aiogram.dispatcher.filters import Text
# from loader import dp
#
#
# @dp.callback_query_handler(Text(equals="show_tasks"))
# async def show_tasks(callback: CallbackQuery):
#     """–û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ '–°–ø–∏—Å–æ–∫ –∑–∞–≤–¥–∞–Ω—å'"""
#     await callback.message.edit_text("üìã *–û–±–µ—Ä—ñ—Ç—å –∑–∞–≤–¥–∞–Ω–Ω—è:*", parse_mode="Markdown",
#                                      reply_markup=get_task_list_keyboard())
#
#
# @dp.callback_query_handler(lambda c: c.data.startswith("task_"))
# async def show_task_details(callback: CallbackQuery):
#     """–û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è"""
#     task_id = int(callback.data.split("_")[1])
#     task = next((t for t in tasks if t["id"] == task_id), None)
#
#     if task:
#         text = f"üìå *{task['title']}*\n\n{task['description']}\n\nüìÖ –î–∞—Ç–∞: {task['due_date']}\n‚ö° –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç: {task['priority']}"
#         await callback.message.edit_text(text, parse_mode="Markdown", reply_markup=get_task_list_keyboard())
#
#
# @dp.callback_query_handler(Text(equals="back_to_main"))
# async def back_to_main(callback: CallbackQuery):
#     """–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"""
#     await callback.message.edit_text("üîô *–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:*", parse_mode="Markdown", reply_markup=get_main_menu_keyboard())
